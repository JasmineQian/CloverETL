<?xml version="1.0" encoding="UTF-8"?>
<Graph author="jasqia" created="Wed Mar 07 16:37:00 CST 2018" guiVersion="4.5.1" id="1520591947189" licenseCode="CLP1DACXIO36442151BY" name="04_MoveFiles_BAK" nature="jobflow" showComponentDetails="true">
<Global>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
<GraphParameter name="sftp" value="sftp://asl785:8YK%2Cyqfyd5@sftp.acxiom.com.cn:22//IN/ETL_TR_JASMINEQIAN/"/>
<GraphParameter name="target_path" value="${sftp}BAK/"/>
<GraphParameter name="source_path" value="${DATAIN_DIR}/*.*"/>
</GraphParameters>
<Dictionary/>
</Global>
<Phase number="0">
<Node fileURL="${DATATMP_DIR}/Rject.txt" guiName="FlatFileWriter" guiX="498" guiY="281" id="FLAT_FILE_WRITER" type="FLAT_FILE_WRITER"/>
<Node guiName="MoveFiles" guiX="279" guiY="294" id="MOVE_FILES" makeParentDirs="true" overwrite="always" type="MOVE_FILES">
<attr name="inputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.targetURL = getParamValue("target_path");
	$out.0.sourceURL = getParamValue("source_path");

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="MOVE_FILES:1" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" outPort="Port 1 (error)" toNode="FLAT_FILE_WRITER:0"/>
</Phase>
</Graph>
